// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using _15._09._23.CW.DAL;

#nullable disable

namespace _15._09._23.CW.DAL.Migrations
{
    [DbContext(typeof(StudentsContext))]
    [Migration("20230915185839_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("_15._09._23.CW.DAL.Entity.Student", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            ID = "1",
                            DateOfBirth = new DateTime(2000, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Sokolov",
                            Mail = "ivan@example.com",
                            Name = "Ivan",
                            Phone = "+380991234567"
                        },
                        new
                        {
                            ID = "2",
                            DateOfBirth = new DateTime(1998, 5, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Petrova",
                            Mail = "anna@example.com",
                            Name = "Anna",
                            Phone = "+380981234567"
                        },
                        new
                        {
                            ID = "3",
                            DateOfBirth = new DateTime(2002, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Trynko",
                            Mail = "oleg@example.com",
                            Name = "Oleg",
                            Phone = "+380971234567"
                        },
                        new
                        {
                            ID = "4",
                            DateOfBirth = new DateTime(1999, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastName = "Kozlova",
                            Mail = "olena@example.com",
                            Name = "Olena",
                            Phone = "+380961234567"
                        });
                });

            modelBuilder.Entity("_15._09._23.CW.DAL.Entity.StudentCard", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("StudentCards");

                    b.HasData(
                        new
                        {
                            ID = "ABC123",
                            IsActive = true,
                            StartDate = new DateTime(2023, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = "XYZ789",
                            IsActive = true,
                            StartDate = new DateTime(2023, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = "DEF456",
                            IsActive = true,
                            StartDate = new DateTime(2023, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = "GHI789",
                            IsActive = true,
                            StartDate = new DateTime(2023, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            ID = "JKL012",
                            IsActive = false,
                            StartDate = new DateTime(2016, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("_15._09._23.CW.DAL.Entity.StudentCard", b =>
                {
                    b.HasOne("_15._09._23.CW.DAL.Entity.Student", "Student")
                        .WithOne("StudentCard")
                        .HasForeignKey("_15._09._23.CW.DAL.Entity.StudentCard", "ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("_15._09._23.CW.DAL.Entity.Student", b =>
                {
                    b.Navigation("StudentCard")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
